// üìÅ backend/utils/db.js
const Database = require('better-sqlite3');
const path = require('path');
const fs = require('fs');

// ‚úÖ T·∫°o th∆∞ m·ª•c data n·∫øu ch∆∞a c√≥
const DATA_DIR = path.join(__dirname, '../data');
if (!fs.existsSync(DATA_DIR)) fs.mkdirSync(DATA_DIR);

// ‚úÖ T·∫°o ho·∫∑c m·ªü file SQLite
const dbPath = path.join(DATA_DIR, 'cache.db');
const db = new Database(dbPath);

// ‚úÖ T·∫°o b·∫£ng n·∫øu ch∆∞a t·ªìn t·∫°i
// folders: cache to√†n b·ªô folder c√≥ thumbnail
// views: l∆∞u l∆∞·ª£t xem
// ‚ûï th√™m c·ªôt root ƒë·ªÉ ph√¢n bi·ªát folder t·ª´ root n√†o

db.exec(`
  CREATE TABLE IF NOT EXISTS folders (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    root TEXT NOT NULL,
    name TEXT NOT NULL, 
    path TEXT NOT NULL,
    thumbnail TEXT,
    lastModified INTEGER,
    imageCount INTEGER DEFAULT 0,
    chapterCount INTEGER DEFAULT 0,
    type TEXT DEFAULT 'folder',
    createdAt INTEGER,
    updatedAt INTEGER
  );

  CREATE INDEX IF NOT EXISTS idx_folders_root_path ON folders(root, path);

  CREATE TABLE IF NOT EXISTS views (
    path TEXT PRIMARY KEY,
    count INTEGER DEFAULT 1
  );
`);


module.exports = db;

// CREATE TABLE IF NOT EXISTS folders (
//   id INTEGER PRIMARY KEY AUTOINCREMENT,
//   root TEXT NOT NULL,            -- t√™n th∆∞ m·ª•c g·ªëc (1,2,...)
//   name TEXT NOT NULL,            -- t√™n folder
//   path TEXT NOT NULL,            -- ƒë∆∞·ªùng d·∫´n t·ª´ root
//   thumbnail TEXT,                -- URL ·∫£nh ƒë·∫ßu ti√™n
//   imageCount INTEGER DEFAULT 0,  -- s·ªë l∆∞·ª£ng ·∫£nh trong folder
//   chapterCount INTEGER DEFAULT 0,-- s·ªë l∆∞·ª£ng subfolder tr·ª±c ti·∫øp
//   type TEXT DEFAULT 'folder',    -- 'folder' ho·∫∑c 'reader'
//   createdAt INTEGER,             -- timestamp l·∫ßn ƒë·∫ßu insert
//   updatedAt INTEGER              -- timestamp l·∫ßn cu·ªëi c·∫≠p nh·∫≠t
// );
